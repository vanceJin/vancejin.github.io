<!DOCTYPE HTML>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta name="Keywords" content="blog"/>
    <meta name="Description" content="blog"/>
    <title>Simple</title>
    <link rel="shortcut icon" href="/static/favicon.png"/>
    <link rel="stylesheet" type="text/css" href="/main.css" />
</head>
<body>
<div class="main">
    <div class="header">
    	<ul id="pages">
            <li><a href="/">home</a></li>
            <li><a href="/#/tags">tags</a></li>
            <li><a href="/#/archive">archive</a></li>
    	</ul>
    </div>
	<div class="wrap-header">
	<h1>
    <a href="/" id="title"></a>
	</h1>
	</div>
<div id="md" style="display: none;">
<!-- markdown -->
原本地址[Asp.net高级程序设计之.NET开发模型（2）](http://www.cnblogs.com/pavkoo/archive/2010/09/10/1822893.html)

##Visual Studio 零星知识点
###大括号风格
可以在工具>选项>勾选显示所有配置，然后找到文本编辑器 >c#>格式化设置。以便使用K&R风格。

###创建ASP.NET WEB应用程序的方法
1. 基于项目的开发。Visual studio在启动浏览器前会把项目的所有代码编译成为一个程序集；
2. 无项目文件的开发。ASP.NET在第一次请求页面的时候才编译网站，而VISUAL STUDIO不需要编译代码。

###.procect文件
记录项目中的文件并保存一些调试设置。

###隐藏的解决方案文件
vs把断电保存到.SUO文件里。Sshiyong解决方案文件跟踪设计环境当前打开的文件。在网站移到另外一个位置的时候，这些信息都会丢失。

###分割视图
宽屏用户可以点击 工具>选项>HTML设计器>一般>垂直分割视图。

###任务列表：一般用来定位要做，没有做完的注释。使用//todo:  //undone:  //hack:

###宏：其实就像一个复读机一样，你做一遍操作，vs自动记录，然后可以播放宏，来自动完成你所做的操作。

##ASP.NET的编码模型
###Visual Studio支持两种编码模型   
1. 内敛代码---所有的代码都被存储在一个单一的.aspx文件中。
2. 代码隐藏---Visual Studio把网页分离为两个文件（通过使用Partial关键字），一个是包含HTML和控件标签的.ASPX文件，还有一个是包含页面源代码的.CS文件。

##ASP.NET的在网页中的继承模式
1. .net类库的page类定义的基本功能允许网页存放其他控件。以HTML形式显现，提供传统ASP对象的访问，比如ERQEUST,RESPONSE,SESSION
2. 你的代码隐藏类从PAGE类继承，以便获得ASP.NET网页的基本功能集合。
3. 当你编译类时，ASP.NET会把一些额外的代码合并到你的类中。
4. Asp.net编译器创建另一个类来表示实际的.ASPX页面。这个类继承自你的自定义的代码隐藏类。









<!-- markdown end -->
</div>
<div class="entry" id="main">
<!-- content -->
<p>原本地址<a href="http://www.cnblogs.com/pavkoo/archive/2010/09/10/1822893.html">Asp.net高级程序设计之.NET开发模型（2）</a></p>

<h2 id="visualstudio">Visual Studio 零星知识点</h2>

<h3 id="">大括号风格</h3>

<p>可以在工具&gt;选项&gt;勾选显示所有配置，然后找到文本编辑器 &gt;c#&gt;格式化设置。以便使用K&amp;R风格。</p>

<h3 id="aspnetweb">创建ASP.NET WEB应用程序的方法</h3>

<ol>
<li>基于项目的开发。Visual studio在启动浏览器前会把项目的所有代码编译成为一个程序集；</li>
<li>无项目文件的开发。ASP.NET在第一次请求页面的时候才编译网站，而VISUAL STUDIO不需要编译代码。</li>
</ol>

<h3 id="procect">.procect文件</h3>

<p>记录项目中的文件并保存一些调试设置。</p>

<h3 id="">隐藏的解决方案文件</h3>

<p>vs把断电保存到.SUO文件里。Sshiyong解决方案文件跟踪设计环境当前打开的文件。在网站移到另外一个位置的时候，这些信息都会丢失。</p>

<h3 id="">分割视图</h3>

<p>宽屏用户可以点击 工具&gt;选项&gt;HTML设计器&gt;一般&gt;垂直分割视图。</p>

<h3 id="todoundonehack">任务列表：一般用来定位要做，没有做完的注释。使用//todo:  //undone:  //hack:</h3>

<h3 id="vs">宏：其实就像一个复读机一样，你做一遍操作，vs自动记录，然后可以播放宏，来自动完成你所做的操作。</h3>

<h2 id="aspnet">ASP.NET的编码模型</h2>

<h3 id="visualstudio">Visual Studio支持两种编码模型</h3>

<ol>
<li>内敛代码---所有的代码都被存储在一个单一的.aspx文件中。</li>
<li>代码隐藏---Visual Studio把网页分离为两个文件（通过使用Partial关键字），一个是包含HTML和控件标签的.ASPX文件，还有一个是包含页面源代码的.CS文件。</li>
</ol>

<h2 id="aspnet">ASP.NET的在网页中的继承模式</h2>

<ol>
<li>.net类库的page类定义的基本功能允许网页存放其他控件。以HTML形式显现，提供传统ASP对象的访问，比如ERQEUST,RESPONSE,SESSION</li>
<li>你的代码隐藏类从PAGE类继承，以便获得ASP.NET网页的基本功能集合。</li>
<li>当你编译类时，ASP.NET会把一些额外的代码合并到你的类中。</li>
<li>Asp.net编译器创建另一个类来表示实际的.ASPX页面。这个类继承自你的自定义的代码隐藏类。</li>
</ol>
<!-- content end -->
</div>
<br>
<br>
    <div id="disqus_thread"></div>
	<div class="footer">
		<p>© Copyright 2014 by isnowfy, Designed by isnowfy</p>
	</div>
</div>
<script src="main.js"></script>
<script id="content" type="text/mustache">
    <h1>{{title}}</h1>
    <div class="tag">
    {{date}}
    {{#tags}}
    <a href="/#/tag/{{name}}">#{{name}}</a>
    {{/tags}}
    </div>
</script>
<script id="pagesTemplate" type="text/mustache">
    {{#pages}}
    <li>
        <a href="{{path}}">{{title}}</a>
    </li>
    {{/pages}}
</script>
<script>
$(document).ready(function() {
    $.ajax({
        url: "main.json",
        type: "GET",
        dataType: "json",
        success: function(data) {
            $("#title").html(data.name);
            var pagesTemplate = Hogan.compile($("#pagesTemplate").html());
            var pagesHtml = pagesTemplate.render({"pages": data.pages});
            $("#pages").append(pagesHtml);
            //path
            var path = "2017050402.htm";
            //path end
            var now = 0;
            for (var i = 0; i < data.posts.length; ++i)
                if (path == data.posts[i].path)
                    now = i;
            var post = data.posts[now];
            var tmp = post.tags.split(" ");
            var tags = [];
            for (var i = 0; i < tmp.length; ++i)
                if (tmp[i].length > 0)
                    tags.push({"name": tmp[i]});
            var contentTemplate = Hogan.compile($("#content").html());
            var contentHtml = contentTemplate.render({"title": post.title, "tags": tags, "date": post.date});
            $("#main").prepend(contentHtml);
            if (data.disqus_shortname.length > 0) {
                var disqus_shortname = data.disqus_shortname;
                (function() {
                    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
                    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
                })();
            }
        }
    });
});
</script>
<script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script type="text/x-mathjax-config">
    MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ["\\(", "\\)"]], processEscapes: true}});
</script>
</body>
</html>
